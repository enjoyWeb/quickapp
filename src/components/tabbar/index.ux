<import name="my-popup" src="apex-ui/components/popup/index"></import>
<import name="my-button" src="apex-ui/components/button/index"></import>
<import name="my-icon" src="apex-ui/components/icon/index"></import>
<import name="my-toast" src="apex-ui/components/toast/index"></import>
<import name="my-select" src="apex-ui/components/select/index"></import>
<import name="dialog-bar" src="../../components/dialog/index.ux"></import>

<template>
  <div class="foot-wrap">
    <div class="foot-box" for="tabList" onclick="toggleTab($idx)">
      <image class="foot-box-img" src="{{$idx===tabIndex?$item.imgActive:$item.imgNormal}}"></image>
      <text style="color:{{$idx===tabIndex?'#e7655f':'#333'}};text-align:center;">{{ $item.label }}</text
      >
    </div>
    <div class="wrap">
      <my-popup 
        id="popupBottom" 
        position="bottom"
      >
        <div class="pop-content">
          <div class="pop-header">
            <image src="/common/images/be5.png"></image>
            <div class="pop-login">
              <text class="title" onclick="login">点击登录</text>
              <text class="desc">欢迎使用云浏览器</text>
            </div>
            <div onclick="addDesktop">
              <text class="add-desktop">加入桌面</text>
            </div>
          </div>
          <div class="list-wrap">
            <div class="list-item" onclick="download">
              <image src="/common/images/download.png"></image>
              <text>下载列表</text>
            </div>
            <div class="list-item" onclick="collect">
              <image src="/common/images/add-collect.png"></image>
              <text>添加收藏</text>
            </div>
            <div class="list-item" onclick="history">
              <image src="/common/images/history.png"></image>
              <text>历史记录</text>
            </div>
            <div class="list-item" onclick="toggleShare">
              <image src="/common/images/share.png"></image>
              <text>立即分享</text>
            </div>
          </div>
          <div class="list-wrap">
            <div class="list-item" onclick="toggleClean">
              <image show="{{clean}}" src="/common/images/clean-active.png"></image>
              <image show="{{!clean}}" src="/common/images/clean.png"></image>
              <text>无痕模式</text>
            </div>
            <div class="list-item" onclick="toggleStory">
              <image show="{{story}}" src="/common/images/story-active.png"></image>
              <image show="{{!story}}" src="/common/images/story.png"></image>
              <text>小说模式</text>
            </div>
            <div class="list-item" onclick="complaint">
              <image src="/common/images/complaint.png"></image>
              <text>投诉反馈</text>
            </div>
            <div class="list-item" onclick="book">
              <image src="/common/images/book.png"></image>
              <text>我的书架</text>
            </div>
          </div>
          <div class="list-wrap">
            <div class="list-item" onclick="setting">
              <image src="/common/images/setting.png"></image>
              <text>设置</text>
            </div>
            <div class="list-item" onclick="handleClickClose('popupBottom')">
              <my-icon type="arrow-down" size="48"></my-icon>
            </div>
            <div class="list-item" onclick="refresh">
              <image src="/common/images/refresh.png"></image>
              <text>刷新</text>
            </div>
          </div>
        </div>
        <my-toast id="toast"></my-toast>
      </my-popup>
    </div>
    <div class="dialog">
      <dialog-bar
        visible="{{open}}"
        title="投诉反馈"
        oncancel="clickCancel()"
        onconfirm="clickConfirm()"
      >
        <div class="wrap-form">
          <div class="item mar20" onclick="singleSelect">
            <text>{{result}}</text>
            <my-icon type="arrow-down" size="40"></my-icon>
          </div>
          <div class="mar20">
            <textarea placeholder="请详细描述您遇到的问题，您的意见及建议" class="textarea"></textarea>
          </div>
          <div class="mar20">
            <input class="input-text" value="{{ phone }}" type="number" placeholder="填写你的联系方式"></input>
          </div>
        </div>
      </dialog-bar>
      <my-select id="select" oncomfirm="singleClose"></my-select>
    </div>
  </div>
</template>

<style lang="less">
  @import './index.less';
</style>

<script>
import router from '@system.router'
import storage from '@system.storage'
import share from '@system.share'
import shareSe from '@service.share'
import shortcut from '@system.shortcut'
import account from '@service.account'
import data from '../../data.js'

export default {
  props: {
    type: {
      default: 'tabData'
    }
  },
  data: {
    tabList: [],
    tabIndex: 0,
    isLogin: 0,
    userName: '路过的一只',
    clean: false,
    story: false,
    open: false,
    result: '请选择反馈类型',
    phone: ''
  },
  onInit() {
    let that = this
    that.tabList = data[that.type]
    const { path = '/pages/home' } = router.getState()
    that.tabIndex = that.tabList.findIndex(item => item.url === path)
    storage.get({
      key: 'clean',
      success: function(data) {
        that.clean = data === 'true';
      }
    })
    storage.get({
      key: 'story',
      success: function(data) {
        that.story = data === 'true';
      }
    })
  },
  //点击导航栏
  toggleTab: function(index) {
    if (index !== this.tabIndex) {
      if (index === 3) {
        this.$child('popupBottom').show()
        return
      }
      this.tabIndex = index
      router.replace({
        uri: this.tabList[index].url,
        params: {
          userName: this.userName,
          isLogin: this.isLogin
        }
      })
    }
  },
  handleClickClose(popup){
    this.$child(popup).hide()
  },
  login () {
    router.replace({
      uri: '/pages/login'
    })
  },
  book () {
    router.replace({
      uri: '/pages/collect',
      params: {
        book: true
      }
    })
  },
  addDesktop () {
    const that = this
    account.authorize({
      type: 'code',
      // redirectUri: 'http://www.example.com/',
      success: function(data) {
        console.log(`authorize success: ${JSON.stringify(data)}`)
        shortcut.hasInstalled({
          success: function(isInstalled) {
            console.log('isInstalled->',isInstalled)
            if (!isInstalled) {
              shortcut.install({
                message: '保存到桌面，秒开浏览器',
                success: function() {
                  that.$child('toast').showToast({
                    content: '加入桌面成功'
                  });
                  that.popHide()
                },
                fail: function(errmsg, errcode) {
                  that.$child('toast').showToast({
                    content: '桌面图标创建失败，错误信息: ' + errcode + '---' + errmsg
                  })
                }
              })
            } else {
              that.$child('toast').showToast({
                content: '桌面图标已经存在！'
              });
            }
          },
          fail: function(errmsg, errcode) {
            that.$child('toast').showToast({
              content: '桌面图标创建失败，错误信息: ' + errcode + '---' + errmsg
            })
          }
        })
      },
      fail: function(data, code) {
        console.log(`authorize fail, code = ${code}`)
      }
    })
  },
  download () {
    router.replace({
      uri: '/pages/download'
    })
  },
  collect () {
    this.$child('toast').showToast({
      content: '收藏成功'
    });
    this.popHide()
  },
  toggleShare () {
    try{
      shareSe.share({
        shareType: 0,
        title: '预感浏览器',
        summary: '极简设计，智能搜索，阅读模式，秘密浏览，安全免费',
        imagePath: '/common/logo.png',
        targetUrl: 'https://m.baidu.com/',
        success: function (data) {
          console.log('handling success')
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      });
    } catch (err) {
      share.share({
        type: 'text/webviewhtml',
        data: '预感浏览器',
        success: function (data) {
          console.log('handling success')
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    }
    this.popHide()
  },
  toggleClean () {
    const that = this
    storage.get({
      key: 'clean',
      success: function(data) {
        const value = data === 'true' ? false : true
        const tips = (data === 'true' ? '已关闭' : '已开启') + '无痕模式'
        storage.set({
          key: 'clean',
          value,
          success: function() {
            that.clean = value
            that.$child('toast').showToast({
              content: tips
            });
            that.popHide()
          }
        })
      }
    })
  },
  history () {
    router.replace({
      uri: '/pages/history'
    })
  },
  toggleStory () {
    const that = this
    storage.get({
      key: 'story',
      success: function(data) {
        const value = data === 'true' ? false : true
        const tips = (data === 'true' ? '已关闭' : '已开启') + '小说模式'
        storage.set({
          key: 'story',
          value,
          success: function() {
            that.story = value
            that.$child('toast').showToast({
              content: tips
            });
            that.popHide()
          }
        })
      }
    })
  },
  complaint () {
    this.popHide()
    this.open = true
  },
  setting () {
    router.replace({
      uri: '/pages/setting'
    })
  },
  refresh () {
    const r = router.getState()
    router.replace({
      uri: r.path
    })
  },
  popHide() {
    setTimeout(() => {
      this.handleClickClose('popupBottom')
    }, 1000)
  },
  clickCancel() {
    this.open = false;
  },
  clickConfirm() {
    this.open = false;
  },
  singleSelect() {
    let opt = ["用户体验投诉", "小说模式反馈", "非自愿打开云浏览器"]
    this.$child('select').showSelect({
      options: opt,
    })
  },
  singleClose(evt) {
    this.result = evt.detail.data || "请选择反馈类型"
  }
}
</script>
