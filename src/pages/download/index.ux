
<import name="divHeader" src="../../components/header/index.ux"></import>
<import name="my-icon" src="apex-ui/components/icon/index"></import>

<template>
  <div class="page">
    <divHeader title="下载列表"></divHeader>
    <text class="empty" show="{{!contentList.length}}">暂无下载数据</text>
    <list
      show="{{contentList.length}}"
      class="content-list"
      scrollpage="{{scrollpage}}"
      onscrollbottom="renderMoreListItem"
    >
      <list-item type="download" class="content-list-item">
        <div
          class="itemBox"
          for="contentList"
          @longpress="toggleDel(true, 'longpress')"
          @click="toggleItem($idx)"
        >
          <div show="{{showDel}}" class="mr20">
            <my-icon type="{{delList.indexOf($idx) === -1 ? 'checkmark-circle-outline' : 'checkmark-circle' }}" size="48"></my-icon>
          </div>
          <image
            src="{{ $item.img }}"
            class="img"
          ></image>
          <div class="content">
            <text class="title">{{ $item.name }}</text>
            <div class="desc">
              <text>{{ $item.size }}</text>
              <text>{{ $item.time }}</text>
            </div>
          </div>
        </div>
      </list-item>
      <list-item type="loadMore" class="load-more">
        <progress type="circular"></progress>
        <text>加载更多</text>
      </list-item>
    </list>
    <div class="footer-wrap" show="{{showDel}}">
      <div @click="selectAll">
        <my-icon type="{{contentList.length !== delList.length ? 'checkmark-circle-outline' : 'checkmark-circle' }}" size="48"></my-icon>
        <text class="ml10">全选</text>
      </div>
      <text @click="del">删除</text>
      <text @click="toggleDel(false)">取消</text>
    </div>
  </div>
</template>

<style lang="less">
  @import './index.less';
</style>

<script>
import router from '@system.router'
import data from '../../data.js'
export default {
  private: {
    scrollpage: false,
    contentList: [],
    download: [],
    showDel: false,
    delList: []
  },
  protected: {
  },
  onInit() {
    let that = this
    that.contentList = data.download
    that.download = data.download
  },
  onHide() {
  },
  onShow() {
  },
  renderMoreListItem: function() {
    this.contentList = this.contentList.concat(this.download)
  },
  del() {
    console.log('删除')
    console.log(this.delList)
    this.toggleDel(false)
  },
  toggleDel(o, longpress) {
    this.showDel = o
    if (longpress !== 'longpress') this.delList = []
  },
  selectAll() {
    if (this.delList.length === this.contentList.length) {
      this.delList = []
    } else {
      const arry = this.contentList.map((item, index) => index)
      this.delList = arry
    }
  },
  toggleItem(idx) {
    if (this.showDel) {
      if (this.delList.indexOf(idx) === -1) {
        this.delList.push(idx)
      } else {
        this.delList.splice(this.delList.indexOf(idx), 1)
      }
      console.log(this.delList)
    }
  }
}
</script>
